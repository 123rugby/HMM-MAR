Log of amendments to hmmmar code:

preproc4hmm.m V2 implemented
* Line 39; created new options parameter options.logisticYdim – by default this is set to zero, implying there are 0 variables in the logistic regression model. If 1 or more this variable denotes the number of dimension of the categorical variable being predicted by logistic regression. NOTE: still need to iron out options checking, as logistic model and normal model are mutually exclusive
* Line 51: here the default parameters for a logistic tuda model are established
* Line 92; Y is only demeaned and given noise (to avoid zero variance) if the model applied is not logistic regression

obsinit.m V2 implemented
subroutine initprior
* line 50: Note that ARD priors are presently initialised for logistic model ARD, but not currently used in inference

* line 71: as above
subroutine initpost
* line 147: expanded intialisation criteria for coefficients W logistic models
* line 165: expanded intialisation criteria for coefficients W for logistic models (method of intialisation may need revision!!!)
* line 230: ensured that Omega covariance matrix is NOT initialised for logistic models

checkspelling.m V2 implemented
* line 104: added logisticYdim as a potential field of options structure

obsupdate.m
 v2 implemented
* Created if loop that separates inference on normal vs logistic observation models, and allows more iterations to converge

updatealpha
* line 42: updated to implement ARD over the hyper parameters on W. Note that for logistic regression with more than one stimulus variable, the shape parameter is scalar whereas the scale parameter is of dimension xDim x nStimuli

tudatrain.m
 v2 implemented
* line 86: set first iteration to update observation model if not updating Gamma (was set just to infer Gamma first and update ops model on subsequent iterations)
* Line 44: allow for Gamma to be inputted directly, not initialised
subroutine standard_dec
* line 140: routine exits with error set to NaN for ill-conditioned problems

hmmmar.m V2 implemented
*line 217: only standardise data if options specify (this will otherwise break logistic model, which needs data to be binary)
*line 339: allow for an initialisation of Gamma entered manually to be parsed through, even when updateGamma=1


updateW V2 implemented
*line 20: if logistic model, omega is never intialised
* line 90: inserted update computations for logistic model

hsinference.m
* line 116 Switched out for logistic models all inference of covariance matrix of noise terms
* line 156 Extract Gamma for trial to parse into nodecluster function 
* line 219 Extract Gamma for trial to parse into nodecluster function
* line 281 Switched out a separate function obslikelogistic, for logistic models
subroutine nodecluster
* line 266 Amended function to take as optional argument the trial specific segment of Gamma
* line 269 Amended to treat logistic cases as having order zero (WARNING - MAY HAVE ALIGNMENT ISSUES ON TIME COURSES, AS SOME TREAT ORDER AS ZERO AND OTHERS AS ONE)

hmmtrain.m
* line 71: Added a psi update following HS inference
* line 92: Added switch to call correct free energy code

checkoptions.m
* line 

OTHER ISSUES:
* decodeGamma (ie infer viterbi path) not working




WORK REMAINING:

- find right place and conditions to iterate while holding Gamma fixed

- add free energy equations

- determine appropriate use (and model) of priors (update in free energy code also!!!)
- ARD or not?

- hs inference

- Y multiple dimensions

- Prove better the conditions under which weighted GLM and VB inference converge / diverge
 
Answer: with dominant states there is divergence, but in all cases VB estimates are more accurate (by 3-5% off a few trials); 
lower the number of states and estimates converge;
higher entropy system (sine wave state time courses) also sees estimates converge - however this seems to deteriorate with more data (?!)

OLD CODE: bayeslogregress_loglikelihood
comp1 = -0.5241
comp2 = -0.3700
comp3 = 2.0546e-16
total = -0.8941

NEWCODE:
comp1: -0.5241
comp2 = -0.1863
comp3 = -0.0167

investigate comp2 components:
gamma = 7.53e-04
Y=-1
X = [1.5, -3.5, 4.12, 0.72]
